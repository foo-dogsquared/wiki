#+title: Desktop search engines


With text files and a version control system in place, it is mostly complete.
However, it's missing (or just lacking of) the retrievability of our notes.
Fortunately, we can easily add that with a desktop search engine (which further highlights the modular aspect of our setup).

As hinted from the module, an ideal desktop search engine can handle the following things:

- Features both a graphics user interface (GUI) and a command-line interface (CLI).
[[file:file-metadata.org][File metadata]]- Accepts not only plain-text files but other file formats such as images, videos, and audio.
- Quickly searches through text and even metadata for binary files.
- Integrates popular formats well.
- Invites integration (and extension) with an API allowing for more control and features.
- Highlights searching with a query language that is both simple and powerful.

Among the recommended desktop search engines from the course, I found [[https://www.lesbonscomptes.com/recoll/][Recoll]] that fits the bill with the added bonus of being a cross-platform tool and easily configurable.

A desktop search engine like Recoll and DocFetcher uses index-based searches which enables them to search quite fast.
In order to achieve Google Search-level of search speed, you have to build an index based from the contents of the directory.
Most desktop search engines index the entire disk by default (and it is not recommended) but they should let you configure what directories to include (both Recoll and DocFetcher do).
Indices should also be continually updated as your filesystem changes.
