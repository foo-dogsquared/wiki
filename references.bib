
@software{0xaxLinuxinsides2021,
  title = {Linux-Insides},
  author = {0xAX},
  date = {2021-08-16T07:44:40Z},
  origdate = {2015-01-03T18:44:57Z},
  url = {https://github.com/0xAX/linux-insides},
  urldate = {2021-08-16},
  abstract = {A little bit about a linux kernel},
  keywords = {linux,linux-insides,linux-kernel}
}

@online{AbsoluteMinimumEvery2003,
  title = {The {{Absolute Minimum Every Software Developer Absolutely}}, {{Positively Must Know About Unicode}} and {{Character Sets}} ({{No Excuses}}!)},
  date = {2003-10-08T00:15:12+00:00},
  url = {https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/},
  urldate = {2021-07-25},
  abstract = {Ever wonder about that mysterious Content-Type tag? You know, the one you’re supposed to put in HTML and you never quite know what it should be? Did you ever get an email from your friends in…},
  langid = {american},
  organization = {{Joel on Software}},
  file = {/home/foo-dogsquared/Zotero/storage/63QJDRG2/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and.html}
}

@book{ahrensHowTakeSmart2017,
  title = {How to {{Take Smart Notes}}: {{One Simple Technique}} to {{Boost Writing}}, {{Learning}} and {{Thinking}} – for {{Students}}, {{Academics}} and {{Nonfiction Book Writers}}},
  shorttitle = {How to {{Take Smart Notes}}},
  author = {Ahrens, Sönke},
  date = {2017-02-24},
  edition = {1st edition},
  publisher = {{CreateSpace Independent Publishing Platform}},
  location = {{North Charleston, SC}},
  abstract = {The key to good and efficient writing lies in the intelligent organisation of ideas and notes. This book helps students, academics and nonfiction writers to get more done, write intelligent texts and learn for the long run. It teaches you how to take smart notes and ensure they bring you and your projects forward. The Take Smart Notes principle is based on established psychological insight and draws from a tried and tested note-taking-technique. This is the first comprehensive guide and description of this system in English, and not only does it explain how it works, but also why. It suits students and academics in the social sciences and humanities, nonfiction writers and others who are in the business of reading, thinking and writing. Instead of wasting your time searching for notes, quotes or references, you can focus on what really counts: thinking, understanding and developing new ideas in writing. It does not matter if you prefer taking notes with pen and paper or on a computer, be it Windows, Mac or Linux. And you can start right away.},
  isbn = {978-1-5428-6650-7},
  langid = {english},
  pagetotal = {176}
}

@video{AlanKayLecture2016,
  title = {History of {{Computers}} \& {{User Interface Images}} \& {{Symbols}}},
  shorttitle = {Alan {{Kay}} - {{Lecture}}},
  editor = {Kay, Alan},
  date = {1987-10-01},
  url = {https://www.youtube.com/watch?v=6ZdxiQoOBgs&feature=youtu.be&t=3080},
  urldate = {2020-07-06},
  abstract = {This is part of the University Video Communication - Distinguished Lecture Series on history of computers and human machine interaction. Alan Kay in this lecture goes over the full history of computer with special empahis on first attempts for creating an interactive User Interface and the mouse/keyboard.  This lecture goes under the title: "Doing with images makes symbols : communicating with computers" which was recorded in Oct 27, 1987 and sponsored by Apple Computers. For those who do not know - Alan Kay's research and ideas on User Interface Design were the foundation of Apple and Windows. This is of two vidoe tapes I had laying in my library for many years - since 1994 -  and recently decided to digitize and upload and share.},
  editortype = {director}
}

@online{allanconSoftwareHeritageFilesystem2021,
  title = {The {{Software Heritage Filesystem}} ({{SwhFS}}): {{Integrating Source Code Archival}} with {{Development}}},
  shorttitle = {The {{Software Heritage Filesystem}} ({{SwhFS}})},
  author = {Allançon, Thibault and Pietri, Antoine and Zacchiroli, Stefano},
  date = {2021-02-12},
  eprint = {2102.06390},
  eprinttype = {arxiv},
  primaryclass = {cs},
  url = {http://arxiv.org/abs/2102.06390},
  urldate = {2021-04-06},
  abstract = {We introduce the Software Heritage filesystem (SwhFS), a user-space filesystem that integrates large-scale open source software archival with development workflows. SwhFS provides a POSIX filesystem view of Software Heritage, the largest public archive of software source code and version control system (VCS) development history.Using SwhFS, developers can quickly "checkout" any of the 2 billion commits archived by Software Heritage, even after they disappear from their previous known location and without incurring the performance cost of repository cloning. SwhFS works across unrelated repositories and different VCS technologies. Other source code artifacts archived by Software Heritage-individual source code files and trees, releases, and branches-can also be accessed using common programming tools and custom scripts, as if they were locally available.A screencast of SwhFS is available online at dx.doi.org/10.5281/zenodo.4531411.},
  archiveprefix = {arXiv},
  keywords = {Computer Science - Software Engineering,reproducibility},
  file = {/home/foo-dogsquared/Zotero/storage/EZNYIY3K/Allançon et al. - 2021 - The Software Heritage Filesystem (SwhFS) Integrat.pdf;/home/foo-dogsquared/Zotero/storage/SDKLQAQB/2102.html}
}

@video{andrewhuangLearnMusicTheory,
  title = {Learn Music Theory in Half an Hour.},
  editor = {{Andrew Huang}},
  url = {https://www.youtube.com/watch?v=rgaTLrZGlk0},
  urldate = {2021-07-21},
  editortype = {director}
}

@online{arnaudReproducibleResearchMethodological,
  title = {Reproducible Research: Methodological Principles for Transparent Science},
  author = {Arnaud, Legrand and Christophe, Pouzat and Konrad, Hinsen},
  url = {https://www.fun-mooc.fr/courses/course-v1:inria+41016+self-paced/},
  urldate = {2020-07-13},
  abstract = {The course deals in a practical way with topics such as note-taking, computational documentation, replicability of analyses. It gives you the basis for reproducible research and explains how to use the reliable tools.},
  langid = {english}
}

@online{AvoidingComplexitySystemd,
  title = {Avoiding Complexity with Systemd},
  url = {https://mgdm.net/weblog/systemd/},
  urldate = {2022-01-03},
  abstract = {Using systemd to avoid having to write some risky code},
  file = {/home/foo-dogsquared/Zotero/storage/BJPD7T4G/systemd.html}
}

@online{boronine_color_2012,
  title = {Color {{Spaces}} for {{Human Beings}}},
  author = {Boronine, Alexei},
  date = {2012-03-26},
  url = {https://www.boronine.com/2012/03/26/Color-Spaces-for-Human-Beings/},
  urldate = {2020-09-19},
  file = {/home/foo-dogsquared/Zotero/storage/NTN2Y772/Color-Spaces-for-Human-Beings.html}
}

@article{civanBetterOrganizePersonal2009,
  title = {Better to Organize Personal Information by Folders or by Tags?: {{The}} Devil Is in the Details},
  shorttitle = {Better to Organize Personal Information by Folders or by Tags?},
  author = {Civan, Andrea and Jones, William and Klasnja, Predrag and Bruce, Harry},
  date = {2009-06-01},
  journaltitle = {Proceedings of the American Society for Information Science and Technology},
  shortjournal = {Proc. Am. Soc. Info. Sci. Tech.},
  volume = {45},
  number = {1},
  pages = {1--13},
  issn = {00447870},
  doi = {10.1002/meet.2008.1450450214},
  url = {http://doi.wiley.com/10.1002/meet.2008.1450450214},
  urldate = {2020-06-22},
  langid = {english},
  file = {/home/foo-dogsquared/Zotero/storage/L2WJNYJ4/Civan et al. - 2009 - Better to organize personal information by folders.pdf}
}

@online{ConnectingReproducibleDeployment,
  title = {Connecting Reproducible Deployment to a Long-Term Source Code Archive — 2019 — {{Blog}} — {{GNU~Guix}}},
  url = {https://guix.gnu.org/en/blog/2019/connecting-reproducible-deployment-to-a-long-term-source-code-archive/},
  urldate = {2021-07-25},
  file = {/home/foo-dogsquared/Zotero/storage/6ZMUJVCM/connecting-reproducible-deployment-to-a-long-term-source-code-archive.html}
}

@video{cs50GitInternalsJohn,
  title = {Git {{Internals}} by {{John Britton}} of {{GitHub}} - {{CS50 Tech Talk}}},
  editor = {{CS50}},
  url = {https://www.youtube.com/watch?v=lG90LZotrpo},
  urldate = {2021-06-22},
  editortype = {director}
}

@thesis{dolstraPurelyFunctionalSoftware2006,
  title = {The Purely Functional Software Deployment Model},
  author = {Dolstra, Eelco},
  date = {2006},
  institution = {{[s.n.]}},
  location = {{S.l.}},
  isbn = {9789039341308},
  langid = {english},
  annotation = {OCLC: 71702886},
  file = {/home/foo-dogsquared/Zotero/storage/DA53ZMUG/Dolstra - 2006 - The purely functional software deployment model.pdf}
}

@online{DrawaboxFreeExercise,
  title = {Drawabox | {{A}} Free, Exercise Based Approach to Learning the Fundamentals of Drawing},
  url = {https://drawabox.com/},
  urldate = {2021-08-21},
  abstract = {A free, exercise based approach to learning the fundamentals of drawing. We tackle drawing in a logical, analytical fashion inspired by concept artists and industrial designers, focusing on technical skills that can be developed with hard work and determination.},
  organization = {{Drawabox.com}},
  file = {/home/foo-dogsquared/Zotero/storage/6A9ZMNUT/drawabox.com.html}
}

@article{galanterWhatGenerativeArt,
  title = {What Is {{Generative Art}}? {{Complexity Theory}} as a {{Context}} for {{Art Theory}}},
  author = {Galanter, Philip},
  pages = {21},
  abstract = {In this paper an attempt is made to offer a definition of generative art that is inclusive and provides fertile ground for both technical and art theoretical development. First the use of systems is identified as a key element in generative art. Various ideas from complexity theory are then introduced. It is noted that systems exist on a continuum from the highly ordered to the highly disordered. Citing examples from information theory and complexity science, it is noted that highly ordered and highly disordered systems are typically viewed as simple, and complex systems exhibit both order and disorder. This leads to the adoption of effective complexity, order, and disorder as organizing principles in the comparison of various generative art systems. This inclusive view leads to the somewhat surprising observation that generative art is as old as art itself. A number of specific artists and studies are discussed within this systems and complexity theory influenced paradigm. Finally a number of art theoretical questions are introduced to exercise the suggested generative art definition and implicit paradigm.},
  langid = {english},
  file = {/home/foo-dogsquared/Zotero/storage/QXUELZE8/Galanter - What is Generative Art Complexity Theory as a Con.pdf}
}

@inproceedings{greenbergUnixShellProgramming2021,
  title = {Unix Shell Programming: The next 50 Years},
  shorttitle = {Unix Shell Programming},
  booktitle = {Proceedings of the {{Workshop}} on {{Hot Topics}} in {{Operating Systems}}},
  author = {Greenberg, Michael and Kallas, Konstantinos and Vasilakis, Nikos},
  date = {2021-06},
  pages = {104--111},
  publisher = {{ACM}},
  location = {{Ann Arbor Michigan}},
  doi = {10.1145/3458336.3465294},
  url = {https://dl.acm.org/doi/10.1145/3458336.3465294},
  urldate = {2021-06-15},
  abstract = {The Unix shell is a powerful, ubiquitous, and reviled tool for managing computer systems. The shell has been largely ignored by academia and industry. While many replacement shells have been proposed, the Unix shell persists. Two recent threads of formal and practical research on the shell enable new approaches. We can help manage the shell’s essential shortcomings (dynamism, power, and abstruseness) and address its inessential ones. Improving the shell holds much promise for development, ops, and data processing.},
  eventtitle = {{{HotOS}} '21: {{Workshop}} on {{Hot Topics}} in {{Operating Systems}}},
  isbn = {978-1-4503-8438-4},
  langid = {english},
  file = {/home/foo-dogsquared/Zotero/storage/R758CARA/Greenberg et al. - 2021 - Unix shell programming the next 50 years.pdf}
}

@video{HowDrawAnything2008,
  title = {How {{To Draw Anything}}},
  editor = {Mission: Renaissance},
  date = {2008-01-16},
  url = {https://www.youtube.com/watch?v=p9TFLQq1Uh4},
  urldate = {2020-07-07},
  abstract = {Here's a great video from an art teacher in Los Angeles named Larry Gluck.  He runs a school called Mission Renaissance and teaches thousands of people how to draw.},
  editortype = {director}
}

@online{InformationLiteracyUser2014,
  title = {The {{Information Literacy User}}'s {{Guide}}: {{An Open}}, {{Online Textbook}}},
  shorttitle = {The {{Information Literacy User}}'s {{Guide}}},
  date = {2014-04-04T18:20:08+00:00},
  url = {https://textbooks.opensuny.org/the-information-literacy-users-guide-an-open-online-textbook/},
  urldate = {2020-07-01},
  abstract = {Good researchers have a host of tools at their disposal that make navigating today’s complex information ecosystem much more manageable. Gaining the knowledge, abilities, and self-reflection necessary to be a good researcher helps not only in academic settings, but is invaluable in any career, and throughout one’s life. The Information …},
  langid = {american},
  organization = {{Open SUNY Textbooks}},
  file = {/home/foo-dogsquared/Zotero/storage/8YJDMZEN/the-information-literacy-users-guide-an-open-online-textbook.html}
}

@book{kunProgrammerIntroductionMathematics2020,
  title = {A Programmer's Introduction to Mathematics},
  author = {Kun, Jeremy},
  date = {2020},
  edition = {2},
  url = {https://pimbook.org/}
}

@video{mathieugauthierFamiStudioTutorialUpdated,
  title = {{{FamiStudio}} 3.0.0 - {{Tutorial}} ({{Updated Mid-2021}})},
  editor = {{Mathieu Gauthier}},
  url = {https://www.youtube.com/watch?v=UyECgqFbZPQ},
  urldate = {2021-07-25},
  abstract = {This is a new version of our "hands-on" chiptune tutorial, updated for FamiStudio 3.0.0 (mid 2021) where we will create a simple song from scratch, in less than one hour, no prior knowledge of chiptune/NES/DAW required! Tutorial assets needed to create the song (samples + instruments): https://famistudio.org/tutorial/Tutor... 00:00 : Welcome 00:54 : Opening the tutorial song 01:54 : Listening to the tutorial song 03:18 : User interface overview 05:11 : Basic controls 07:44 : Importing DPCM samples 11:20 : Project \& song properties 12:44 : Tempo 15:18 : Drum verse  16:59 : Bass verse 18:25 : Duplicating notes quickly 19:47 : Channel force display 21:11 : Transposing notes 22:59 : Square 1 melody (Recording mode) 26:00 : Square 2 melody (Copying patterns) 28:03 : Drums \& bass chorus  30:14 : Chorus melody (Creating slide notes) 32:09 : Chorus arpeggios 33:17 : Effect panel 35:02 : Editing \& replacing intruments 41:48 : Chorus instruments (Toggling attack) 43:29 : Single channel echo techniques 49:00 : Noise hi-hat (Arpeggio envelopes) 52:24 : Bass polish 53:28 : Intro (Custom pattern settings) 56:42 : Duplicating a song 57:30 : Noise drums (Importing instruments) 1:01:01 : Exporting to various formats 1:02:13 : Good-bye! FamiStudio is a DAW style music editor for the original Nintendo Entertainment System / Famicom. It is targeted at both chiptune artists and NES homebrewers. Download it at: https://famistudio.org/ Full documentation at: https://famistudio.org/doc/ Join the itch.io community at: https://bleubleu.itch.io/famistudio Join the FamiStudio Discord: https://discord.gg/88UPmxh Twitter: https://twitter.com/nesbleubleu},
  editortype = {director}
}

@online{matuschakEvergreenNotes,
  title = {Evergreen Notes},
  author = {Matuschak, Andy},
  url = {https://notes.andymatuschak.org/z4SDCZQeRo4xFEQ8H4qrSqd68ucpgE6LU155C},
  urldate = {2021-05-08},
  organization = {{Andyʼs working notes}},
  file = {/home/foo-dogsquared/Zotero/storage/CSWGPERC/z4SDCZQeRo4xFEQ8H4qrSqd68ucpgE6LU155C.html}
}

@article{mckenney_is_2019,
  title = {Is {{Parallel Programming Hard}}, {{And}}, {{If So}}, {{What Can You Do About It}}?},
  author = {McKenney, Paul E},
  date = {2019-12-22},
  pages = {561},
  langid = {english},
  file = {/home/foo-dogsquared/Zotero/storage/T3CQ8E5S/McKenney - Is Parallel Programming Hard, And, If So, What Can.pdf}
}

@article{nielsenAugmentingLongtermMemory2018,
  title = {Augmenting {{Long-term Memory}}},
  author = {Nielsen, Michael},
  date = {2018},
  url = {http://augmentingcognition.com/ltm.html},
  urldate = {2021-05-14},
  file = {/home/foo-dogsquared/Zotero/storage/LWS5WBWK/ltm.html}
}

@video{noauthor_how_2019,
  title = {How {{Do Linux Kernel Drivers Work}}? - {{Learning Resource}}},
  shorttitle = {How {{Do Linux Kernel Drivers Work}}?},
  date = {2019-12-12},
  url = {https://www.youtube.com/watch?v=juGNPLdjLH4},
  urldate = {2020-09-17},
  abstract = {If you want to hack the Kernel, are interested in jailbreaks or just want to understand computers better, Linux Device Drivers is a great book to get you started. I used to learn the basics and in this video I want to share what *clicked* for me. LDD Book: https://lwn.net/Kernel/LDD3/ LDD3 Example Code Updated: https://github.com/martinezjavier/ldd3 -=[ 🔴 Stuff I use ]=- → Microphone:* https://geni.us/ntg3b → Graphics tablet:* https://geni.us/wacom-intuos → Camera\#1 for streaming:* https://geni.us/sony-camera → Lens for streaming:* https://geni.us/sony-lense → Connect Camera\#1 to PC:* https://geni.us/cam-link → Keyboard:* https://geni.us/mech-keyboard → Old Microphone:* https://geni.us/mic-at2020usb US Store Front:* https://www.amazon.com/shop/liveoverflow -=[ ❤️ Support ]=- → per Video: https://www.patreon.com/join/liveover... → per Month: https://www.youtube.com/channel/UClcE... -=[ 🐕 Social ]=- → Twitter: https://twitter.com/LiveOverflow/ → Website: https://liveoverflow.com/ → Subreddit: https://www.reddit.com/r/LiveOverflow/ → Facebook: https://www.facebook.com/LiveOverflow/ -=[ 📄 P.S. ]=- All links with "*" are affiliate links. LiveOverflow / Security Flag GmbH is part of the Amazon Affiliate Partner Programm.}
}

@online{noauthor_linux_nodate,
  title = {Linux {{Device Drivers}}, {{Third Edition}} [{{LWN}}.Net]},
  url = {https://lwn.net/Kernel/LDD3/},
  urldate = {2020-09-17},
  file = {/home/foo-dogsquared/Zotero/storage/CFXMPM5G/LDD3.html}
}

@video{packagingconChangesPythonPackaging2021,
  title = {Changes in {{Python}} Packaging – What Downstream Packagers Need to Know - {{Thomas Kluyver}}},
  editor = {{PackagingCon}},
  date = {2021-11-22},
  url = {https://www.youtube.com/watch?v=S291gr473dg},
  urldate = {2021-12-21},
  abstract = {PackagingCon 2021 https://pretalx.com/packagingcon-2021... Python packaging has changed a lot in the last few years. New tools such as Poetry and Flit allow creating packages without the traditional setup.py file, and new standards mean that pyproject.toml files are now the linchpin for building and installing Python modules. The wheel package format, which is somewhat older, has also gained a more central role. I’ll explain what has changed, including a brief summary of what motivated these changes. Then I’ll discuss how you can use the new standard interfaces and formats, with a focus on people re-packaging Python packages into other distribution systems such as Conda, Spack, or Linux distribution repositories. I’ll introduce the low-level ‘build’ and ‘installer’ tools, and compare them to the more widely used ‘pip install’.},
  editortype = {director},
  keywords = {packaging,python}
}

@video{packagingconPackagingGrailLudovic2021,
  title = {The {{Packaging Grail}} - {{Ludovic Courtès}} | {{PackagingCon}} 2021},
  editor = {{PackagingCon}},
  date = {2021-11-23},
  url = {https://www.youtube.com/watch?v=tcTOkXlE_ac},
  urldate = {2021-12-28},
  abstract = {More info: https://pretalx.com/packagingcon-2021... Description: Package managers are so old that one may wonder why we are here discussing recent tools in this area. What are we trying to achieve that existing tools failed to provide? And why-oh-why does so much energy go into sidestepping package managers through “application bundles” à la Docker? In this talk, I’ll present the grail that GNU Guix is after, taking examples from core features and key packaging practices. You may recognize bits from other projects: the rigor of Debian, the functional paradigm of Nix, the flexibility of Spack. You’ll also see salient differences: Guix tries to go as far as possible in each of these directions while remaining pragmatic. There’s a fine line between pragmatism and deception that Guix tries not to cross. I’ll explain what the project’s “red lines” are and why we think users and implementors should care. I’ll reflect on how we can collectively shape a brighter future for software deployment.},
  editortype = {director}
}

@video{packagingconPythonPackagingWhy2021,
  title = {Python {{Packaging Why}} Don't You Just? - {{Tzu-ping Chung}} | {{PackagingCon}} 2021},
  shorttitle = {Python {{Packaging Why}} Don't You Just?},
  editor = {{PackagingCon}},
  date = {2021-11-22},
  url = {https://www.youtube.com/watch?v=jpP07nZiicE},
  urldate = {2021-12-21},
  abstract = {Every packaging system has its specific way of doing things, but to an outsider. Python’s seems to have a knack of finding the most non-straightforward and weird solution for every choice. This talk attempts to trace some of the peculiarities to find out the reasoning behind the decisions, and how they stand in the modern packaging landscape.},
  editortype = {director},
  keywords = {packaging,python}
}

@online{PixelJointForum,
  title = {Pixel {{Joint Forum}}: {{The Pixel Art Tutorial}}},
  url = {http://pixeljoint.com/forum/forum_posts.asp?TID=11299},
  urldate = {2021-03-31},
  file = {/home/foo-dogsquared/Zotero/storage/H5VPM3FZ/forum_posts.html}
}

@online{PrivilegeEscalationPolkit2021,
  title = {Privilege Escalation with Polkit: {{How}} to Get Root on {{Linux}} with a Seven-Year-Old Bug},
  shorttitle = {Privilege Escalation with Polkit},
  date = {2021-06-10T16:00:52+00:00},
  url = {https://github.blog/2021-06-10-privilege-escalation-polkit-root-on-linux-with-bug/},
  urldate = {2021-06-11},
  abstract = {polkit is a system service installed by default on many Linux distributions. It’s used by systemd, so any Linux distribution that uses systemd also uses polkit. As a member of GitHub Security Lab, my job is to help improve the security of open source software by finding and reporting vulnerabilities. A few weeks ago, I found a privilege escalation vulnerability in polkit.},
  langid = {american},
  organization = {{The GitHub Blog}},
  file = {/home/foo-dogsquared/Zotero/storage/IUA3ENCQ/2021-06-10-privilege-escalation-polkit-root-on-linux-with-bug.html}
}

@book{robinsonTextMining,
  title = {Text {{Mining}} with {{R}}},
  author = {Robinson, Julia Silge {and} David},
  url = {https://www.tidytextmining.com/},
  urldate = {2020-06-15},
  abstract = {A guide to text analysis within the tidy data framework, using the tidytext package and other tidy tools},
  keywords = {data-mining},
  file = {/home/foo-dogsquared/Zotero/storage/BANUJYQE/www.tidytextmining.com.html}
}

@video{spudlyoConsistentTechnicalDocuments2019,
  title = {Consistent {{Technical Documents Using Emacs}} and {{Org Mode}}},
  editor = {{spudlyo}},
  date = {2019-11-17},
  url = {https://www.youtube.com/watch?v=0g9BcZvQbXU&t=851s},
  urldate = {2021-05-05},
  abstract = {Files used in the demo: https://gitlab.com/spudlyo/orgdemo\hspace{0pt} My dotfiles: https://gitlab.com/spudlyo/dotfiles\hspace{0pt} Read The Org: https://github.com/fniessen/org-html-...\hspace{0pt} Read The Docs: https://sphinx-rtd-theme.readthedocs....\hspace{0pt} Git from the Bits Up: https://www.youtube.com/watch?v=MYP56...\hspace{0pt}},
  editortype = {director}
}

@video{stevenpinkerLinguisticsStyleWriting2015,
  title = {Linguistics, {{Style}} and {{Writing}} in the 21st {{Century}} - with {{Steven Pinker}}},
  editor = {{Steven Pinker}},
  date = {2015-10-28},
  url = {https://www.youtube.com/watch?v=OV5J6BfToSw},
  urldate = {2021-05-21},
  editortype = {director}
}

@online{StructureInterpretationComputer,
  title = {Structure and {{Interpretation}} of {{Computer Programs}}},
  url = {https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/book.html},
  urldate = {2020-07-08},
  file = {/home/foo-dogsquared/Zotero/storage/MKKYYSRM/book.html}
}

@online{WasWrongSpeed2015,
  title = {I {{Was Wrong About Speed Reading}}: {{Here}} Are the {{Facts}}},
  shorttitle = {I {{Was Wrong About Speed Reading}}},
  date = {2015-01-19T21:38:32+00:00},
  url = {https://www.scotthyoung.com/blog/2015/01/19/speed-reading-redo/},
  urldate = {2021-05-02},
  abstract = {7 years ago I wrote an article about speed reading. Turns out I made a lot of mistakes. Discover why speed reading might not be as useful as expected.},
  langid = {american},
  organization = {{Scott H Young}}
}

@online{WhyTacitKnowledge2020,
  title = {Why {{Tacit Knowledge}} Is {{More Important Than Deliberate Practice}}},
  date = {2020-06-09T10:49:50},
  url = {https://commoncog.com/blog/tacit-knowledge-is-a-real-thing/},
  urldate = {2020-07-07},
  abstract = {What tacit knowledge is, and why it is the most interesting topic in the study of expertise today.},
  langid = {english},
  organization = {{Commonplace - The Commoncog Blog}},
  file = {/home/foo-dogsquared/Zotero/storage/FK4A7WUP/tacit-knowledge-is-a-real-thing.html}
}

@article{yurichevReverseEngineeringBeginners,
  title = {Reverse {{Engineering}} for {{Beginners}}},
  author = {Yurichev, Dennis},
  pages = {1063},
  langid = {english},
  keywords = {programming,security},
  file = {/home/foo-dogsquared/Zotero/storage/UXP46KMJ/Yurichev - Reverse Engineering for Beginners.pdf}
}


